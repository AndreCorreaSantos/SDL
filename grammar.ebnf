program = '#',PROGRAM_ARGUMENTS,'\n',{'\n'},{FUNCTION,'\n',{'\n'}};
PROGRAM_ARGUMENTS = '#',{('out',OUT_ARG|'in',FUNC_ARG),','};
OUT_ARG = 'func', IDENTIFIER;
FUNC_ARG = TYPE, IDENTIFIER;
TYPE = float | int | bool | vec2 | vec3 | vec4;
FUNCTION ='def', IDENTIFIER,'(',{FUNC_ARG,','},')','{',BLOCK,'}';
BLOCK = {STATEMENT,'\n'},'return', (BOOL_EXP | );
STATEMENT = ( | ASSIGNMENT |DECLARATION|WHILE | IF ), "\n" ;
WHILE = "while", BOOL_EXP, "do", "\n", { ( STATEMENT )}, "end";
IF = "if", BOOL_EXP, "then", "\n", { ( STATEMENT )}, (  | ( "else", "\n",  { ( STATEMENT )})), "end" ;
ASSIGNMENT = IDENTIFIER, '=', BOOL_EXP;
DECLARATION = 'local', IDENTIFIER,('=', BOOL_EXP | );
BOOL_EXP = BOOL_TERM, { ("or"), BOOL_TERM } ;
BOOL_TERM = REL_EXP, { ("and"), REL_EXP } ;
REL_EXP = EXPRESSION, { ("==" | ">" | "<"), EXPRESSION } ;
EXPRESSION = TERM, {("+" | "-" | "**"), TERM};
TERM = FACTOR, { ("*" | "/"), FACTOR } ;
FACTOR = INT | IDENTIFIER | FLOAT | vec2 | vec3 | vec4 | (("+" | "-" | "not"), FACTOR ) | "(", EXPRESSION, ")"| FUNCTION_CALL ;
vec2 = 'vec2','(',FLOAT,',',FLOAT,')';
vec3 = 'vec3','(',FLOAT,',',FLOAT,',',FLOAT,')';vec4 = 'vec4','(',FLOAT,',',FLOAT,',',FLOAT,')';
IDENTIFIER = LETTER, { LETTER | DIGIT | "_" }, (PROPERTY_ACCESS |);
PROPERTY_ACCESS = '.', PROPERTY;
PROPERTY = ('x',('y',('z',('w',|) |) | ) ) | ;
INT =  DIGIT, { DIGIT };
FLOAT = INT,'.',INT;
LETTER = ( "a" | "..." | "z" | "A" | "..." | "Z" );
FUNCTION_CALL = IDENTIFIER,'(',{IDENTIFIER,','},')';
